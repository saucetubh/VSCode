$date
	Mon Sep 15 11:25:56 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_fullAdder $end
$var wire 1 ! Sum $end
$var wire 1 " Cout $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % Cin $end
$scope module f1 $end
$var wire 1 # A $end
$var wire 1 $ B $end
$var wire 1 % Cin $end
$var wire 1 " Cout $end
$var wire 1 ! Sum $end
$var wire 8 & O [7:0] $end
$scope module d1 $end
$var wire 3 ' A [2:0] $end
$var wire 1 ( E $end
$var wire 8 ) O [7:0] $end
$scope module d1 $end
$var wire 2 * A [1:0] $end
$var wire 1 + E $end
$var wire 4 , O [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 2 - A [1:0] $end
$var wire 1 . E $end
$var wire 4 / O [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
0.
b0 -
b1 ,
1+
b0 *
b1 )
1(
b0 '
b1 &
0%
0$
0#
0"
0!
$end
#10
1!
b10 &
b10 )
b10 ,
b1 *
b1 -
b1 '
1%
#20
1!
b100 &
b100 )
b100 ,
b10 *
b10 -
0%
b10 '
1$
#30
0!
1"
b1000 &
b1000 )
b1000 ,
b11 *
b11 -
b11 '
1%
#40
1!
0"
b1 /
b10000 &
b10000 )
b0 ,
0+
1.
b0 *
b0 -
0%
0$
b100 '
1#
#50
0!
1"
b100000 &
b100000 )
b10 /
b1 *
b1 -
b101 '
1%
#60
0!
1"
b1000000 &
b1000000 )
b100 /
b10 *
b10 -
0%
b110 '
1$
#70
1!
b10000000 &
b10000000 )
b1000 /
b11 *
b11 -
b111 '
1%
#80
